drop table if exists t;
create table t (c1 int, c2 int);
select count(*) from t;
count(*)
0
insert into t values (1, 1), (2, 2), (1, 3), (2, 1);
select count(*) from t;
count(*)
4
select c1, c2, max(c1), min(c2), count(c1), count(c2) from t;
c1	c2	max(c1)	min(c2)	count(c1)	count(c2)
1	1	2	1	4	4
select c1, c2, count(*) from t group by c1;
c1	c2	count(*)
1	1	2
2	2	2
select c1, c2, count(*) from t group by c2;
c1	c2	count(*)
1	1	2
2	2	1
1	3	1
select c1, c2, count(*) from t group by c1, c2;
c1	c2	count(*)
1	1	1
2	2	1
1	3	1
2	1	1
select s+10 from (select sum(c1) as s from t where c1 < 2) as a;
s+10
12
select * from (select count(c1), c2 from t group by c2) as a;
count(c1)	c2
2	1
1	2
1	3
select distinct(c2) from (select count(c1) as c, c2 from t group by c2) as a;
c2
1
2
3
select distinct(c) from (select count(c1) as c, c2 from t group by c2) as a order by c;
c
1
2
insert into t values (),(),();
insert into t values (1,null);
select * from t;
c1	c2
1	1
2	2
1	3
2	1
NULL	NULL
NULL	NULL
NULL	NULL
1	NULL
select count(c2), c1 from t group by c1;
count(c2)	c1
2	1
2	2
0	NULL
select count(*), c1 from t group by c1;
count(*)	c1
3	1
2	2
3	NULL
select group_concat(c2) from t group by c1;
group_concat(c2)
1,3
2,1
NULL
select group_concat(c1) from t group by c2;
group_concat(c1)
1,2
2
1
1
select group_concat(c2,c1) from t group by c1;
group_concat(c2,c1)
11,31
22,12
NULL
delete from t;
insert into t values (1,1), (2,2), (1,2), (1,3);
select c1, group_concat(c2) from t group by t.c1;
c1	group_concat(c2)
1	1,2,3
2	2
select c1, group_concat(c2) from t group by 1;
c1	group_concat(c2)
1	1,2,3
2	2
select * from t group by 3;
Error 1105: Unknown column '3'
select * from t group by count(c1);
Error 1111: Invalid use of group function
select count(c1) from t group by 1;
Error 1105: group by cannot contain aggregate function
select c1, group_concat(c2) from t group by "abc";
c1	group_concat(c2)
1	1,2,2,3
select c1, group_concat(c2) from t group by 3.14;
c1	group_concat(c2)
1	1,2,2,3
select c1, group_concat(c2) from t group by 3 * 10;
c1	group_concat(c2)
1	1,2,2,3
select c1, group_concat(c2) from t group by "abc", c1;
c1	group_concat(c2)
1	1,2,3
2	2
select c1 as a, group_concat(c2) from t group by a;
a	group_concat(c2)
1	1,2,3
2	2
select c1 as a, group_concat(c2) from t group by a * 0;
a	group_concat(c2)
1	1,2,2,3
select c1 as a, group_concat(c2) from t group by c1 * 0;
a	group_concat(c2)
1	1,2,2,3
select c1 as a, group_concat(c2) as b from t group by b + 1;
Error 1247: Reference 'b' not supported (reference to group function)
select c1 as a, c2 as a from t group by a;
Error 1105: column a is ambiguous.
select c1 as c2, c2 from t group by c1;
c2	c2
1	1
2	2
select c1 as c2, c2 from t group by c2;
Error 1105: column c2 is ambiguous.
select c1 as c2, c2 from t group by c2 + 1;
c2	c2
1	1
2	2
1	3
select c1 as c2, c1 as c2 from t group by c2;
c2	c2
1	1
2	2
1	1
select c1 as c2, c1 as c2 from t group by c1;
c2	c2
1	1
2	2
delete from t;
insert into t values (1,1), (2, 1), (1, 1), (4, 1);
select sum(all c1) from t;
sum(all c1)
8
select sum(distinct all c1) from t;
sum(distinct all c1)
7
select avg(all c1) from t;
avg(all c1)
2.0000
select avg(distinct all c1) from t;
avg(distinct all c1)
2.3333
select count(c1) from t;
count(c1)
4
select count(distinct c1) from t;
count(distinct c1)
3
select group_concat(c1) from t group by c2;
group_concat(c1)
1,2,1,4
select group_concat(distinct c1) from t group by c2;
group_concat(distinct c1)
1,2,4
select group_concat(c1, c2) from t group by c2;
group_concat(c1, c2)
11,21,11,41
select group_concat(distinct c1, c2) from t group by c2;
group_concat(distinct c1, c2)
11,21,41
select sum(distinct c1) + count(*) from t group by c2;
sum(distinct c1) + count(*)
11
drop table t;
create table t(c1 int);
insert t values(null), (null);
select sum(c1) from t;
sum(c1)
NULL
select avg(c1) from t;
avg(c1)
NULL
select count(c1) from t;
count(c1)
0
select count(*) from t;
count(*)
2
delete from t;
insert into t values (1), (2), (3);
must output empty
select * from t where c1 = null group by c1;
c1
select * from t where c1 = null group by c1 order by max(c1);
c1
select * from t group by c1 having not null is null;
c1
select count(*) from t where c1 = null group by c1;
count(*)
select count(*) from t where c1 = null having not null is null;
count(*)
must output an extra row
select * from t where c1 = null order by max(c1);
c1
NULL
select count(*) from t where c1 = null;
count(*)
0
select count(c1) from t where c1 = null;
count(c1)
0
select avg(c1) from t where c1 = null;
avg(c1)
NULL
select sum(c1) from t where c1 = null;
sum(c1)
NULL
select group_concat(c1) from t where c1 = null;
group_concat(c1)
NULL
select * from t where c1 = null having count(c1) = 0;
c1
NULL
select c1, max(c1), 123 from t where c1 = null;
c1	max(c1)	123
NULL	NULL	123
sqllogic/test/random/groupby test
drop table if exists tab0;
CREATE TABLE tab0(col0 INTEGER, col1 INTEGER, col2 INTEGER);
insert tab0 values(1,2,3),(2,1,3),(3,1,2),(4,5,1),(6,3,1);
select * from tab0;
col0	col1	col2
1	2	3
2	1	3
3	1	2
4	5	1
6	3	1
SELECT col0 AS col0, col0 AS col0 FROM tab0 GROUP BY col0;
col0	col0
1	1
2	2
3	3
4	4
6	6
SELECT col0 + col1 AS col0, col0 AS col0 FROM tab0 GROUP BY col0;
col0	col0
3	1
3	2
4	3
9	4
9	6
SELECT all + col0 AS col0, col0 AS col0 FROM tab0 GROUP BY col0;
col0	col0
1	1
2	2
3	3
4	4
6	6
SELECT DISTINCT + - col0 AS col0, col1 * - col1 col0 FROM tab0 GROUP BY col1;
col0	col0
-1	-4
-2	-1
-4	-25
-6	-9
SELECT DISTINCT + - col0 AS col0, col1 * - col1 col0 FROM tab0 GROUP BY col1, col0;
col0	col0
-1	-4
-2	-1
-3	-1
-4	-25
-6	-9
SELECT DISTINCT + - col0 AS col0, col1 * - col1 col0 FROM tab0 AS cor0 GROUP BY col1, col0;
col0	col0
-1	-4
-2	-1
-3	-1
-4	-25
-6	-9
SELECT ALL - col0 col1, col0 AS col1 FROM tab0 cor0 GROUP BY col1, col0;
col1	col1
-1	1
-2	2
-3	3
-4	4
-6	6
SELECT col2 col1, col1 FROM tab0 AS cor0 GROUP BY cor0.col2, cor0.col1;
col1	col1
3	2
3	1
2	1
1	5
1	3
SELECT cor0.col2 col1, cor0.col1 FROM tab0 AS cor0 GROUP BY cor0.col2, cor0.col1;
col1	col1
3	2
3	1
2	1
1	5
1	3
SELECT DISTINCT cor0.col2 col1, cor0.col1 FROM tab0 AS cor0 GROUP BY cor0.col2, cor0.col1;
col1	col1
3	2
3	1
2	1
1	5
1	3
